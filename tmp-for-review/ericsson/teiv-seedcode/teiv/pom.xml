<?xml version="1.0" encoding="UTF-8"?>
<!-- spotless:off -->
<!--
  ============LICENSE_START=======================================================
  Copyright (C) 2024 Ericsson
  Modifications Copyright (C) 2024 OpenInfra Foundation Europe
  ================================================================================
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

  SPDX-License-Identifier: Apache-2.0
  ============LICENSE_END=========================================================
 -->
<!-- spotless:on -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.oran.smo</groupId>
        <artifactId>topology-exposure-inventory</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <groupId>org.oran.smo.teiv</groupId>
    <artifactId>topology-exposure-inventory-jar</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <properties>
        <!-- External Yang model destination location -->
        <src.models.import>${project.basedir}/src/main/resources/models/import/</src.models.import>
    </properties>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${version.spring-cloud}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
            <version>${version.jackson-databind-nullable}</version>
        </dependency>
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>${version.logback}</version>
        </dependency>
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-core</artifactId>
            <version>${version.micrometer}</version>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <version>${version.micrometer}</version>
        </dependency>
        <dependency>
            <groupId>io.cloudevents</groupId>
            <artifactId>cloudevents-kafka</artifactId>
            <version>${version.cloudevents-kafka}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jersey</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>${version.springdoc-openapi}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-contract-stub-runner</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${version.postgresql}</version>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq</artifactId>
            <version>${jooq.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>jakarta.persistence</groupId>
                    <artifactId>jakarta.persistence-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>jakarta.xml.bind</groupId>
                    <artifactId>jakarta.xml.bind-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${version.lombok}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
        </dependency>
        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr4-runtime</artifactId>
            <version>${version.antlr}</version>
        </dependency>
        <dependency>
            <groupId>org.oran.smo.yangtools.parser</groupId>
            <artifactId>yang-parser-jar</artifactId>
            <version>${version.yang-parser-jar}</version>
        </dependency>
        <!-- Test Dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <version>${version.testcontainers}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-contract-verifier</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <version>${version.mockitoinline}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>4.2.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-test</artifactId>
            <version>${version.reactor-test}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.cloudevents</groupId>
            <artifactId>cloudevents-json-jackson</artifactId>
            <version>${version.cloudevents-json-jackson}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>**/topology-exposure-inventory-openapi.zip</exclude>
                </excludes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>${project.basedir}/src/test/resources</directory>
            </testResource>
        </testResources>
        <plugins>
            <!-- TODO internaltools.devops plugin which generates .adoc of contract
                test -->
            <plugin>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
                <version>${version.asciidoctor-maven-plugin}</version>
                <configuration>
                    <sourceDirectory>${project.basedir}/target/generated-contract-docs</sourceDirectory>
                    <outputDirectory>${project.basedir}/doc/contracts-ties</outputDirectory>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-docs</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>${version.openapi-generator-maven-plugin}</version>
                <executions>
                    <execution>
                        <id>openapi-generate-html</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>
                                ${project.basedir}/src/main/resources/v1/topology-exposure-inventory-openapi.yaml</inputSpec>
                            <generatorName>html</generatorName>
                            <output>src/main/resources/v1</output>
                        </configuration>
                    </execution>
                    <execution>
                        <id>openapi-generate-pojos</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>
                                ${project.basedir}/src/main/resources/v1/topology-exposure-inventory-openapi.yaml</inputSpec>
                            <generatorName>spring</generatorName>
                            <modelNamePrefix>oran-teiv</modelNamePrefix>
                            <configOptions>
                                <generatedConstructorWithRequiredArgs>false</generatedConstructorWithRequiredArgs>
                                <generateSupportingFiles>true</generateSupportingFiles>
                                <sourceFolder>src/java/main</sourceFolder>
                                <dateLibrary>java8</dateLibrary> <!-- java8 is a valid option from https://openapi-generator.tech/docs/generators/java/ -->
                                <library>spring-boot</library>
                                <interfaceOnly>true</interfaceOnly>
                                <skipOverwrite>false</skipOverwrite>
                                <useTags>true</useTags>
                                <useBeanValidation>true</useBeanValidation>
                                <useSpringBoot3>true</useSpringBoot3>
                                <additionalModelTypeAnnotations>@lombok.Builder;
                                    @lombok.NoArgsConstructor; @lombok.AllArgsConstructor</additionalModelTypeAnnotations>
                            </configOptions>
                            <apiPackage>org.oran.smo.teiv.api</apiPackage>
                            <modelPackage>org.oran.smo.teiv.api.model</modelPackage>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>${project.artifactId}</artifactId>
                            <artifactVersion>${project.version}</artifactVersion>
                            <environmentVariables>
                                <enablePostProcessFile>true</enablePostProcessFile>
                            </environmentVariables>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-contract-maven-plugin</artifactId>
                <version>4.0.2</version>
                <extensions>true</extensions>
                <configuration>
                    <baseClassForTests>org.oran.smo.teiv.exposure.api.contract.TopologyExposureApiBase</baseClassForTests>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <useFile>false</useFile>
                    <includes>
                        <include>**/*Test.java</include>
                    </includes>
                    <testSourceDirectory>target/generated-test-sources</testSourceDirectory>
                </configuration>
            </plugin>
            <!-- JaCoCo plugin for Java Code Coverage -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${version.jacoco-maven.plugin}</version>
                <configuration>
                    <append>true</append>
                    <excludes>
                        <exclude>**/teiv/api/**/*</exclude>
                        <exclude>**/models/*.*</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>jacoco-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <phase>test</phase>
                        <configuration>
                            <rules>
                                <rule implementation="org.jacoco.maven.RuleConfiguration">
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit implementation="org.jacoco.report.check.Limit">
                                            <counter>INSTRUCTION</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${jacoco-maven-plugin.coveredratio.minimum}</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                            <excludes>
                                <exclude>**/teiv/api/**/*</exclude>
                                <exclude>**/models/*.*</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>agent-for-ut</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <excludes>
                                <exclude>**/teiv/api/**/*</exclude>
                                <exclude>**/models/*.*</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>agent-for-it</id>
                        <goals>
                            <goal>prepare-agent-integration</goal>
                        </goals>
                        <configuration>
                            <excludes>
                                <exclude>**/teiv/api/**/*</exclude>
                                <exclude>**/models/*.*</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>jacoco-site</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <phase>verify</phase>
                        <configuration>
                            <excludes>
                                <exclude>**/teiv/api/**/*</exclude>
                                <exclude>**/models/*.*</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/generated-sources/annotations/</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>${version.license-maven-plugin}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
                <version>${version.spotless-plugin}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.antlr</groupId>
                <artifactId>antlr4-maven-plugin</artifactId>
                <version>${version.antlr}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>antlr4</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>${version.antrun-maven-plugin}</version>
                <executions>
                    <execution>
                        <id>download-external-yang-models</id>
                        <phase>initialize</phase>
                        <configuration>
                            <target>
                                <mkdir dir="${src.models.import}" />

                                <resources id="3gpp-yang-downloads">
                                    <url
                                        url="${source.3gpp.Rel17_SA97}_3gpp-common-yang-types.yang" />
                                    <url
                                        url="${source.3gpp.Rel17_SA97}_3gpp-common-yang-extensions.yang" />
                                </resources>
                                <get dest="${src.models.import}" skipexisting="true">
                                    <resources refid="3gpp-yang-downloads" />
                                </get>

                                <resources id="ietf-yang-downloads">
                                    <url
                                        url="${source.ietfcatalog}ietf-inet-types@2013-07-15.yang" />
                                    <url
                                        url="${source.ietfcatalog}ietf-geo-location@2022-02-11.yang" />
                                    <url
                                        url="${source.ietfcatalog}ietf-yang-types@2013-07-15.yang" />
                                </resources>
                                <get dest="${src.models.import}" skipexisting="true">
                                    <resources refid="ietf-yang-downloads" />
                                    <mapper type="regexp" from="^.*/([^/@]+)@[^/.]+(\..+)$"
                                        to="\1\2" />
                                </get>

                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
